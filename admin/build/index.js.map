{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;AAAA,MAAM;EAAEA;AAAG,CAAC,GAAGC,EAAE,CAACC,IAAI;AACtB,MAAM;EAAEC;AAAQ,CAAC,GAAGF,EAAE,CAACE,OAAO;AAC9B,MAAM;EAAEC,UAAU;EAAEC;AAAa,CAAC,GAAGJ,EAAE,CAACK,IAAI;AAE5C,MAAM;EAAEC;AAA2B,CAAC,GAAGN,EAAE,CAACO,QAAQ;AAClD,MAAM;EAAEC,aAAa;EAAEC,WAAW;EAAEC;AAAS,CAAC,GAAGV,EAAE,CAACW,UAAU;AAG9D,MAAMC,SAAS,GAAGC,IAAA,IAA2C;EAAA,IAAzC;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAAH,IAAA;EACtD,OACCI,iEAAA,CAACX,0BAA0B;IAACY,KAAK,EAAGnB,EAAE,CAAE,qBAAqB,EAAE,WAAW,CAAG;IAACoB,WAAW,EAAC;EAAM,GAC/FF,iEAAA,CAACP,QAAQ,QACRO,iEAAA,CAACR,WAAW;IACXW,KAAK,EAAGrB,EAAE,CAAE,8BAA8B,EAAE,WAAW,CAAI;IAC3DsB,KAAK,EAAGN,QAAQ,CAACO,YAAc;IAC/BC,QAAQ,EAAKF,KAAK,IAAML,WAAW,CAAE;MAAEM,YAAY,EAAED;IAAM,CAAC;EAAI,EAC/D,CACQ,CACiB;AAE/B,CAAC;AAED,+DAAenB,OAAO,CAAE,CACvBC,UAAU,CAAIqB,MAAM,IAAM;EACzB,OAAO;IACNT,QAAQ,EAAES,MAAM,CAAE,aAAa,CAAE,CAACC,sBAAsB,CAAE,MAAM,CAAE;IAClEX,QAAQ,EAAEU,MAAM,CAAE,aAAa,CAAE,CAACE,kBAAkB;EACrD,CAAC;AACF,CAAC,CAAE,EACHtB,YAAY,CAAIuB,QAAQ,IAAM;EAC7B,OAAO;IACNX,WAAWA,CAAEY,OAAO,EAAG;MACtBD,QAAQ,CAAE,aAAa,CAAE,CAACpB,QAAQ,CAAE;QAAEsB,IAAI,EAAED;MAAQ,CAAC,CAAE;IACxD;EACD,CAAC;AACF,CAAC,CAAE,CACH,CAAE,CAAEhB,SAAS,CAAE;;;;;;;;;;ACpChB;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNA,MAAM;EAAEkB;AAAe,CAAC,GAAG9B,EAAE,CAAC+B,OAAO;AACrC,MAAM;EAAEC;AAAkB,CAAC,GAAGhC,EAAE,CAACiC,MAAM;AACvC,MAAM;EAAEC,QAAQ;EAAEC;AAAkB,CAAC,GAAGnC,EAAE,CAACoC,WAAW;AACtD,MAAM;EAAE5B,aAAa;EAAE6B,SAAS;EAAE3B,QAAQ;EAAE4B,eAAe;EAAEC,aAAa;EAAEC;AAAY,CAAC,GAAGxC,EAAE,CAACW,UAAU;AAEzE;AAEhCmB,cAAc,CAAE,oBAAoB,EAAE;EAClCW,MAAMA,CAAA,EAAG;IACL,OAAOxB,iEAAA,CAACL,8CAAS,OAAG;EACxB;AACJ,CAAC,CAAE,C","sources":["webpack://admin/./src/title.js","webpack://admin/external window [\"wp\",\"element\"]","webpack://admin/webpack/bootstrap","webpack://admin/webpack/runtime/compat get default export","webpack://admin/webpack/runtime/define property getters","webpack://admin/webpack/runtime/hasOwnProperty shorthand","webpack://admin/webpack/runtime/make namespace object","webpack://admin/./src/index.js"],"sourcesContent":["const { __ } = wp.i18n;\r\nconst { compose } = wp.compose;\r\nconst { withSelect, withDispatch } = wp.data;\r\n \r\nconst { PluginDocumentSettingPanel } = wp.editPost;\r\nconst { ToggleControl, TextControl, PanelRow } = wp.components;\r\n\r\n \r\nconst Component = ( { postType, postMeta, setPostMeta } ) => {\r\n\treturn(\r\n\t\t<PluginDocumentSettingPanel title={ __( 'My Custom Post meta', 'txtdomain') } initialOpen=\"true\">\r\n\t\t\t<PanelRow>\r\n\t\t\t\t<TextControl\r\n\t\t\t\t\tlabel={ __( 'Write some text, if you like', 'txtdomain' ) }\r\n\t\t\t\t\tvalue={ postMeta._movie_title }\r\n\t\t\t\t\tonChange={ ( value ) => setPostMeta( { _movie_title: value } ) }\r\n\t\t\t\t/>\r\n\t\t\t</PanelRow>\r\n\t\t</PluginDocumentSettingPanel>\r\n\t);\r\n}\r\n \r\nexport default compose( [\r\n\twithSelect( ( select ) => {\t\t\r\n\t\treturn {\r\n\t\t\tpostMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\r\n\t\t\tpostType: select( 'core/editor' ).getCurrentPostType(),\r\n\t\t};\r\n\t} ),\r\n\twithDispatch( ( dispatch ) => {\r\n\t\treturn {\r\n\t\t\tsetPostMeta( newMeta ) {\r\n\t\t\t\tdispatch( 'core/editor' ).editPost( { meta: newMeta } );\r\n\t\t\t}\r\n\t\t};\r\n\t} )\r\n] )( Component );","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { registerPlugin } = wp.plugins;\r\nconst { registerBlockType } = wp.blocks;\r\nconst { RichText, InspectorControls } = wp.blockEditor;\r\nconst { ToggleControl, PanelBody, PanelRow, CheckboxControl, SelectControl, ColorPicker } = wp.components;\r\n\r\nimport Component from './title';\r\n\r\nregisterPlugin( 'movie-title-plugin', {\r\n    render() {\r\n        return(<Component />);\r\n    }\r\n} );"],"names":["__","wp","i18n","compose","withSelect","withDispatch","data","PluginDocumentSettingPanel","editPost","ToggleControl","TextControl","PanelRow","components","Component","_ref","postType","postMeta","setPostMeta","createElement","title","initialOpen","label","value","_movie_title","onChange","select","getEditedPostAttribute","getCurrentPostType","dispatch","newMeta","meta","registerPlugin","plugins","registerBlockType","blocks","RichText","InspectorControls","blockEditor","PanelBody","CheckboxControl","SelectControl","ColorPicker","render"],"sourceRoot":""}